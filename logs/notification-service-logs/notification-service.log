2025-06-12T06:06:11.858+05:00 INFO  [main] Starting NotificationServiceApplication using Java 21.0.7 with PID 46313 (/Users/doniyor/Documents/Java/programmingtechie/springboot-microservices/notification-service/target/classes started by doniyor in /Users/doniyor/Documents/Java/programmingtechie/springboot-microservices)
2025-06-12T06:06:11.863+05:00 INFO  [main] No active profile set, falling back to 1 default profile: "default"
2025-06-12T06:06:12.943+05:00 INFO  [main] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2025-06-12T06:06:12.966+05:00 INFO  [main] initializing Kafka metrics collector
2025-06-12T06:06:12.983+05:00 INFO  [main] KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://127.0.0.1:8085]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-06-12T06:06:13.026+05:00 INFO  [main] These configurations '[schema.registry.url, specific.avro.reader]' were supplied but are not used yet.
2025-06-12T06:06:13.027+05:00 INFO  [main] Kafka version: 3.8.1
2025-06-12T06:06:13.027+05:00 INFO  [main] Kafka commitId: 70d6ff42debf7e17
2025-06-12T06:06:13.028+05:00 INFO  [main] Kafka startTimeMs: 1749690373027
2025-06-12T06:06:13.034+05:00 INFO  [main] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Subscribed to topic(s): order-placed
2025-06-12T06:06:13.045+05:00 INFO  [main] Started NotificationServiceApplication in 1.515 seconds (process running for 2.07)
2025-06-12T06:06:46.087+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Disconnecting from node -1 due to request timeout.
2025-06-12T06:06:46.092+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Cancelled in-flight API_VERSIONS request with correlation id 1 due to node -1 being disconnected (elapsed time since creation: 32939ms, elapsed time since send: 32939ms, throttle time: 0ms, request timeout: 30000ms)
2025-06-12T06:06:46.092+05:00 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-06-12T06:06:55.044+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Cluster ID: rn1sZhdCQ0CZ-49QHq7cHw
2025-06-12T06:06:55.108+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T06:06:55.111+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T06:06:55.200+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-1-4cf8c4c4-bd6b-4bae-a54e-8db546690189
2025-06-12T06:06:55.201+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T06:06:58.309+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully joined group with generation Generation{generationId=61, memberId='consumer-notification-service-1-4cf8c4c4-bd6b-4bae-a54e-8db546690189', protocol='range'}
2025-06-12T06:06:58.333+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Finished assignment for group at generation 61: {consumer-notification-service-1-4cf8c4c4-bd6b-4bae-a54e-8db546690189=Assignment(partitions=[order-placed-0])}
2025-06-12T06:06:58.374+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully synced group in generation Generation{generationId=61, memberId='consumer-notification-service-1-4cf8c4c4-bd6b-4bae-a54e-8db546690189', protocol='range'}
2025-06-12T06:06:58.375+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order-placed-0])
2025-06-12T06:06:58.376+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Adding newly assigned partitions: order-placed-0
2025-06-12T06:06:58.428+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Setting offset for partition order-placed-0 to the committed offset FetchPosition{offset=33, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-06-12T06:06:58.441+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions assigned: [order-placed-0]
2025-06-12T06:06:58.986+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Revoke previously assigned partitions order-placed-0
2025-06-12T06:06:58.996+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions revoked: [order-placed-0]
2025-06-12T06:06:58.996+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Member consumer-notification-service-1-4cf8c4c4-bd6b-4bae-a54e-8db546690189 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-06-12T06:06:59.000+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T06:06:59.002+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T06:06:59.002+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-06-12T06:06:59.026+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T06:06:59.026+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T06:06:59.072+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Node 1 sent an invalid full fetch response with extraIds=(ZL1yz8t4RJyp0hZBRwvM5w), response=()
2025-06-12T06:06:59.073+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics scheduler closed
2025-06-12T06:06:59.073+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T06:06:59.073+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-12T06:06:59.073+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics reporters closed
2025-06-12T06:06:59.076+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] App info kafka.consumer for consumer-notification-service-1 unregistered
2025-06-12T06:06:59.101+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: Consumer stopped
2025-06-12T06:07:09.378+05:00 INFO  [main] Starting NotificationServiceApplication using Java 21.0.7 with PID 46393 (/Users/doniyor/Documents/Java/programmingtechie/springboot-microservices/notification-service/target/classes started by doniyor in /Users/doniyor/Documents/Java/programmingtechie/springboot-microservices)
2025-06-12T06:07:09.391+05:00 INFO  [main] No active profile set, falling back to 1 default profile: "default"
2025-06-12T06:07:11.436+05:00 INFO  [main] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2025-06-12T06:07:11.472+05:00 INFO  [main] initializing Kafka metrics collector
2025-06-12T06:07:11.492+05:00 INFO  [main] KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://127.0.0.1:8085]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-06-12T06:07:11.550+05:00 INFO  [main] These configurations '[schema.registry.url, specific.avro.reader]' were supplied but are not used yet.
2025-06-12T06:07:11.552+05:00 INFO  [main] Kafka version: 3.8.1
2025-06-12T06:07:11.552+05:00 INFO  [main] Kafka commitId: 70d6ff42debf7e17
2025-06-12T06:07:11.552+05:00 INFO  [main] Kafka startTimeMs: 1749690431551
2025-06-12T06:07:11.570+05:00 INFO  [main] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Subscribed to topic(s): order-placed
2025-06-12T06:07:11.595+05:00 INFO  [main] Started NotificationServiceApplication in 3.398 seconds (process running for 4.033)
2025-06-12T06:07:11.890+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Cluster ID: rn1sZhdCQ0CZ-49QHq7cHw
2025-06-12T06:07:11.891+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T06:07:11.893+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T06:07:11.947+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-1-d6336629-c3f0-428c-912d-d559227f0e1a
2025-06-12T06:07:11.964+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T06:07:15.003+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully joined group with generation Generation{generationId=63, memberId='consumer-notification-service-1-d6336629-c3f0-428c-912d-d559227f0e1a', protocol='range'}
2025-06-12T06:07:15.009+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Finished assignment for group at generation 63: {consumer-notification-service-1-d6336629-c3f0-428c-912d-d559227f0e1a=Assignment(partitions=[order-placed-0])}
2025-06-12T06:07:15.026+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully synced group in generation Generation{generationId=63, memberId='consumer-notification-service-1-d6336629-c3f0-428c-912d-d559227f0e1a', protocol='range'}
2025-06-12T06:07:15.026+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order-placed-0])
2025-06-12T06:07:15.029+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Adding newly assigned partitions: order-placed-0
2025-06-12T06:07:15.037+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Setting offset for partition order-placed-0 to the committed offset FetchPosition{offset=33, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-06-12T06:07:15.038+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions assigned: [order-placed-0]
2025-06-12T06:16:12.046+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Node -1 disconnected.
2025-06-12T06:26:11.991+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Node -1 disconnected.
2025-06-12T06:40:06.892+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Revoke previously assigned partitions order-placed-0
2025-06-12T06:40:06.894+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions revoked: [order-placed-0]
2025-06-12T06:40:06.895+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Member consumer-notification-service-1-d6336629-c3f0-428c-912d-d559227f0e1a sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-06-12T06:40:06.896+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T06:40:06.896+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T06:40:06.896+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-06-12T06:40:06.900+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T06:40:06.900+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T06:40:07.356+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics scheduler closed
2025-06-12T06:40:07.356+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T06:40:07.357+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-12T06:40:07.357+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics reporters closed
2025-06-12T06:40:07.365+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] App info kafka.consumer for consumer-notification-service-1 unregistered
2025-06-12T06:40:07.375+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: Consumer stopped
2025-06-12T06:40:17.052+05:00 INFO  [main] Starting NotificationServiceApplication using Java 21.0.7 with PID 48554 (/Users/doniyor/Documents/Java/programmingtechie/springboot-microservices/notification-service/target/classes started by doniyor in /Users/doniyor/Documents/Java/programmingtechie/springboot-microservices)
2025-06-12T06:40:17.057+05:00 INFO  [main] No active profile set, falling back to 1 default profile: "default"
2025-06-12T06:40:20.153+05:00 INFO  [main] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2025-06-12T06:40:20.204+05:00 INFO  [main] initializing Kafka metrics collector
2025-06-12T06:40:20.238+05:00 INFO  [main] KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://127.0.0.1:8085]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-06-12T06:40:20.331+05:00 INFO  [main] These configurations '[schema.registry.url, specific.avro.reader]' were supplied but are not used yet.
2025-06-12T06:40:20.333+05:00 INFO  [main] Kafka version: 3.8.1
2025-06-12T06:40:20.333+05:00 INFO  [main] Kafka commitId: 70d6ff42debf7e17
2025-06-12T06:40:20.334+05:00 INFO  [main] Kafka startTimeMs: 1749692420332
2025-06-12T06:40:20.343+05:00 INFO  [main] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Subscribed to topic(s): order-placed
2025-06-12T06:40:20.358+05:00 INFO  [main] Started NotificationServiceApplication in 4.176 seconds (process running for 5.468)
2025-06-12T06:40:20.853+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Cluster ID: rn1sZhdCQ0CZ-49QHq7cHw
2025-06-12T06:40:20.853+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T06:40:20.859+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T06:40:20.889+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-1-80141ffd-3670-4aa4-a4eb-fa1dba578e0c
2025-06-12T06:40:20.890+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T06:40:23.925+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully joined group with generation Generation{generationId=65, memberId='consumer-notification-service-1-80141ffd-3670-4aa4-a4eb-fa1dba578e0c', protocol='range'}
2025-06-12T06:40:23.943+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Finished assignment for group at generation 65: {consumer-notification-service-1-80141ffd-3670-4aa4-a4eb-fa1dba578e0c=Assignment(partitions=[order-placed-0])}
2025-06-12T06:40:23.972+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully synced group in generation Generation{generationId=65, memberId='consumer-notification-service-1-80141ffd-3670-4aa4-a4eb-fa1dba578e0c', protocol='range'}
2025-06-12T06:40:23.973+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order-placed-0])
2025-06-12T06:40:23.974+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Adding newly assigned partitions: order-placed-0
2025-06-12T06:40:23.992+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Setting offset for partition order-placed-0 to the committed offset FetchPosition{offset=33, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-06-12T06:40:23.997+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions assigned: [order-placed-0]
2025-06-12T06:49:21.149+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Node -1 disconnected.
2025-06-12T06:59:20.939+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Node -1 disconnected.
2025-06-12T07:01:50.496+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Revoke previously assigned partitions order-placed-0
2025-06-12T07:01:50.503+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions revoked: [order-placed-0]
2025-06-12T07:01:50.504+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Member consumer-notification-service-1-80141ffd-3670-4aa4-a4eb-fa1dba578e0c sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-06-12T07:01:50.505+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T07:01:50.505+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T07:01:50.506+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-06-12T07:01:50.521+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T07:01:50.521+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T07:01:50.950+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics scheduler closed
2025-06-12T07:01:50.950+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T07:01:50.951+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-12T07:01:50.951+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics reporters closed
2025-06-12T07:01:50.955+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] App info kafka.consumer for consumer-notification-service-1 unregistered
2025-06-12T07:01:50.963+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: Consumer stopped
2025-06-12T07:01:55.085+05:00 INFO  [main] Starting NotificationServiceApplication using Java 21.0.7 with PID 51014 (/Users/doniyor/Documents/Java/programmingtechie/springboot-microservices/notification-service/target/classes started by doniyor in /Users/doniyor/Documents/Java/programmingtechie/springboot-microservices)
2025-06-12T07:01:55.110+05:00 INFO  [main] No active profile set, falling back to 1 default profile: "default"
2025-06-12T07:01:56.851+05:00 INFO  [main] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2025-06-12T07:01:56.879+05:00 INFO  [main] initializing Kafka metrics collector
2025-06-12T07:01:56.904+05:00 INFO  [main] KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://127.0.0.1:8085]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-06-12T07:01:56.968+05:00 INFO  [main] These configurations '[schema.registry.url, specific.avro.reader]' were supplied but are not used yet.
2025-06-12T07:01:56.970+05:00 INFO  [main] Kafka version: 3.8.1
2025-06-12T07:01:56.970+05:00 INFO  [main] Kafka commitId: 70d6ff42debf7e17
2025-06-12T07:01:56.970+05:00 INFO  [main] Kafka startTimeMs: 1749693716969
2025-06-12T07:01:56.981+05:00 INFO  [main] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Subscribed to topic(s): order-placed
2025-06-12T07:01:56.997+05:00 INFO  [main] Started NotificationServiceApplication in 2.436 seconds (process running for 3.133)
2025-06-12T07:01:57.398+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Cluster ID: rn1sZhdCQ0CZ-49QHq7cHw
2025-06-12T07:01:57.400+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T07:01:57.402+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T07:01:57.427+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-1-45e50ee5-3f0f-4094-afd7-122662abff3c
2025-06-12T07:01:57.428+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T07:02:00.437+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully joined group with generation Generation{generationId=67, memberId='consumer-notification-service-1-45e50ee5-3f0f-4094-afd7-122662abff3c', protocol='range'}
2025-06-12T07:02:00.441+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Finished assignment for group at generation 67: {consumer-notification-service-1-45e50ee5-3f0f-4094-afd7-122662abff3c=Assignment(partitions=[order-placed-0])}
2025-06-12T07:02:00.455+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully synced group in generation Generation{generationId=67, memberId='consumer-notification-service-1-45e50ee5-3f0f-4094-afd7-122662abff3c', protocol='range'}
2025-06-12T07:02:00.455+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order-placed-0])
2025-06-12T07:02:00.458+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Adding newly assigned partitions: order-placed-0
2025-06-12T07:02:00.472+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Setting offset for partition order-placed-0 to the committed offset FetchPosition{offset=33, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-06-12T07:02:00.473+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions assigned: [order-placed-0]
2025-06-12T07:10:57.504+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Node -1 disconnected.
2025-06-12T07:13:43.132+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Revoke previously assigned partitions order-placed-0
2025-06-12T07:13:43.138+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions revoked: [order-placed-0]
2025-06-12T07:13:43.140+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Member consumer-notification-service-1-45e50ee5-3f0f-4094-afd7-122662abff3c sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-06-12T07:13:43.143+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T07:13:43.144+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T07:13:43.144+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-06-12T07:13:43.153+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T07:13:43.153+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T07:13:43.250+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics scheduler closed
2025-06-12T07:13:43.250+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T07:13:43.250+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-12T07:13:43.250+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics reporters closed
2025-06-12T07:13:43.283+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] App info kafka.consumer for consumer-notification-service-1 unregistered
2025-06-12T07:13:43.319+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: Consumer stopped
2025-06-12T07:13:51.710+05:00 INFO  [main] Starting NotificationServiceApplication using Java 21.0.7 with PID 51961 (/Users/doniyor/Documents/Java/programmingtechie/springboot-microservices/notification-service/target/classes started by doniyor in /Users/doniyor/Documents/Java/programmingtechie/springboot-microservices)
2025-06-12T07:13:51.713+05:00 INFO  [main] No active profile set, falling back to 1 default profile: "default"
2025-06-12T07:13:53.830+05:00 INFO  [main] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2025-06-12T07:13:53.859+05:00 INFO  [main] initializing Kafka metrics collector
2025-06-12T07:13:53.882+05:00 INFO  [main] KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://127.0.0.1:8085]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-06-12T07:13:53.953+05:00 INFO  [main] These configurations '[schema.registry.url, specific.avro.reader]' were supplied but are not used yet.
2025-06-12T07:13:53.955+05:00 INFO  [main] Kafka version: 3.8.1
2025-06-12T07:13:53.955+05:00 INFO  [main] Kafka commitId: 70d6ff42debf7e17
2025-06-12T07:13:53.955+05:00 INFO  [main] Kafka startTimeMs: 1749694433954
2025-06-12T07:13:53.965+05:00 INFO  [main] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Subscribed to topic(s): order-placed
2025-06-12T07:13:53.988+05:00 INFO  [main] Started NotificationServiceApplication in 2.845 seconds (process running for 3.617)
2025-06-12T07:13:54.329+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Cluster ID: rn1sZhdCQ0CZ-49QHq7cHw
2025-06-12T07:13:54.330+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T07:13:54.331+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T07:13:54.351+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-1-89f26197-ee19-48b3-a984-7c12c8420f0e
2025-06-12T07:13:54.351+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T07:13:57.364+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully joined group with generation Generation{generationId=69, memberId='consumer-notification-service-1-89f26197-ee19-48b3-a984-7c12c8420f0e', protocol='range'}
2025-06-12T07:13:57.378+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Finished assignment for group at generation 69: {consumer-notification-service-1-89f26197-ee19-48b3-a984-7c12c8420f0e=Assignment(partitions=[order-placed-0])}
2025-06-12T07:13:57.404+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully synced group in generation Generation{generationId=69, memberId='consumer-notification-service-1-89f26197-ee19-48b3-a984-7c12c8420f0e', protocol='range'}
2025-06-12T07:13:57.405+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order-placed-0])
2025-06-12T07:13:57.437+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Adding newly assigned partitions: order-placed-0
2025-06-12T07:13:57.487+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Setting offset for partition order-placed-0 to the committed offset FetchPosition{offset=33, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-06-12T07:13:57.488+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions assigned: [order-placed-0]
2025-06-12T07:17:52.072+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = notification-service-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-06-12T07:17:52.105+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Kafka version: 3.8.1
2025-06-12T07:17:52.105+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Kafka commitId: 70d6ff42debf7e17
2025-06-12T07:17:52.105+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Kafka startTimeMs: 1749694672105
2025-06-12T07:17:52.118+05:00 INFO  [kafka-admin-client-thread | notification-service-admin-0] App info kafka.admin.client for notification-service-admin-0 unregistered
2025-06-12T07:17:52.121+05:00 INFO  [kafka-admin-client-thread | notification-service-admin-0] Metrics scheduler closed
2025-06-12T07:17:52.121+05:00 INFO  [kafka-admin-client-thread | notification-service-admin-0] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T07:17:52.121+05:00 INFO  [kafka-admin-client-thread | notification-service-admin-0] Metrics reporters closed
2025-06-12T07:17:52.138+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "8ab70610-cd7a-4b3c-ba95-ab4a5db2e6aa", "email": "user@gmail.com", "firstName": null, "lastName": null}
2025-06-12T07:17:55.390+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Order Notification email sent!
2025-06-12T07:19:43.734+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Revoke previously assigned partitions order-placed-0
2025-06-12T07:19:43.736+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions revoked: [order-placed-0]
2025-06-12T07:19:43.736+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Member consumer-notification-service-1-89f26197-ee19-48b3-a984-7c12c8420f0e sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-06-12T07:19:43.738+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T07:19:43.738+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T07:19:43.738+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-06-12T07:19:43.742+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T07:19:43.742+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T07:19:44.053+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics scheduler closed
2025-06-12T07:19:44.053+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T07:19:44.053+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-12T07:19:44.054+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics reporters closed
2025-06-12T07:19:44.056+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] App info kafka.consumer for consumer-notification-service-1 unregistered
2025-06-12T07:19:44.071+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: Consumer stopped
2025-06-12T07:19:47.764+05:00 INFO  [main] Starting NotificationServiceApplication using Java 21.0.7 with PID 52346 (/Users/doniyor/Documents/Java/programmingtechie/springboot-microservices/notification-service/target/classes started by doniyor in /Users/doniyor/Documents/Java/programmingtechie/springboot-microservices)
2025-06-12T07:19:47.768+05:00 INFO  [main] No active profile set, falling back to 1 default profile: "default"
2025-06-12T07:19:49.220+05:00 INFO  [main] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2025-06-12T07:19:49.244+05:00 INFO  [main] initializing Kafka metrics collector
2025-06-12T07:19:49.263+05:00 INFO  [main] KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://127.0.0.1:8085]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-06-12T07:19:49.318+05:00 INFO  [main] These configurations '[schema.registry.url, specific.avro.reader]' were supplied but are not used yet.
2025-06-12T07:19:49.319+05:00 INFO  [main] Kafka version: 3.8.1
2025-06-12T07:19:49.319+05:00 INFO  [main] Kafka commitId: 70d6ff42debf7e17
2025-06-12T07:19:49.319+05:00 INFO  [main] Kafka startTimeMs: 1749694789318
2025-06-12T07:19:49.329+05:00 INFO  [main] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Subscribed to topic(s): order-placed
2025-06-12T07:19:49.346+05:00 INFO  [main] Started NotificationServiceApplication in 2.183 seconds (process running for 2.663)
2025-06-12T07:19:49.608+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Cluster ID: rn1sZhdCQ0CZ-49QHq7cHw
2025-06-12T07:19:49.609+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T07:19:49.610+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T07:19:49.629+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-1-b1c2be3e-5611-4351-b15f-f1adf8e7dffd
2025-06-12T07:19:49.629+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T07:19:52.661+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully joined group with generation Generation{generationId=71, memberId='consumer-notification-service-1-b1c2be3e-5611-4351-b15f-f1adf8e7dffd', protocol='range'}
2025-06-12T07:19:52.666+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Finished assignment for group at generation 71: {consumer-notification-service-1-b1c2be3e-5611-4351-b15f-f1adf8e7dffd=Assignment(partitions=[order-placed-0])}
2025-06-12T07:19:52.685+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully synced group in generation Generation{generationId=71, memberId='consumer-notification-service-1-b1c2be3e-5611-4351-b15f-f1adf8e7dffd', protocol='range'}
2025-06-12T07:19:52.685+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order-placed-0])
2025-06-12T07:19:52.686+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Adding newly assigned partitions: order-placed-0
2025-06-12T07:19:52.693+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Setting offset for partition order-placed-0 to the committed offset FetchPosition{offset=34, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-06-12T07:19:52.694+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions assigned: [order-placed-0]
2025-06-12T07:20:11.029+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = notification-service-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-06-12T07:20:11.039+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Kafka version: 3.8.1
2025-06-12T07:20:11.039+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Kafka commitId: 70d6ff42debf7e17
2025-06-12T07:20:11.040+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Kafka startTimeMs: 1749694811039
2025-06-12T07:20:11.050+05:00 INFO  [kafka-admin-client-thread | notification-service-admin-0] App info kafka.admin.client for notification-service-admin-0 unregistered
2025-06-12T07:20:11.052+05:00 INFO  [kafka-admin-client-thread | notification-service-admin-0] Metrics scheduler closed
2025-06-12T07:20:11.052+05:00 INFO  [kafka-admin-client-thread | notification-service-admin-0] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T07:20:11.052+05:00 INFO  [kafka-admin-client-thread | notification-service-admin-0] Metrics reporters closed
2025-06-12T07:20:11.064+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "f6ce8053-a8b2-464e-8e57-c83b415462cf", "email": "user@gmail.com", "firstName": null, "lastName": null}
2025-06-12T07:20:14.418+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Order Notification email sent!
2025-06-12T07:28:49.988+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Node -1 disconnected.
2025-06-12T07:50:30.210+05:00 INFO  [kafka-coordinator-heartbeat-thread | notification-service] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-06-12T07:50:30.227+05:00 INFO  [kafka-coordinator-heartbeat-thread | notification-service] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T07:50:30.229+05:00 INFO  [kafka-coordinator-heartbeat-thread | notification-service] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Client requested disconnect from node 2147483646
2025-06-12T07:50:30.312+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T08:06:43.147+05:00 INFO  [kafka-coordinator-heartbeat-thread | notification-service] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-06-12T08:06:43.150+05:00 INFO  [kafka-coordinator-heartbeat-thread | notification-service] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T08:06:43.151+05:00 INFO  [kafka-coordinator-heartbeat-thread | notification-service] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Client requested disconnect from node 2147483646
2025-06-12T08:06:43.154+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T08:06:43.154+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-06-12T08:06:43.154+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T08:06:43.291+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T08:22:44.500+05:00 INFO  [kafka-coordinator-heartbeat-thread | notification-service] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-06-12T08:22:44.501+05:00 INFO  [kafka-coordinator-heartbeat-thread | notification-service] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T08:22:44.501+05:00 INFO  [kafka-coordinator-heartbeat-thread | notification-service] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Client requested disconnect from node 2147483646
2025-06-12T08:22:44.514+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T08:22:44.531+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-06-12T08:22:44.531+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T08:22:44.631+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T08:33:37.322+05:00 INFO  [kafka-coordinator-heartbeat-thread | notification-service] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-06-12T08:33:37.419+05:00 INFO  [kafka-coordinator-heartbeat-thread | notification-service] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T08:33:37.420+05:00 INFO  [kafka-coordinator-heartbeat-thread | notification-service] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Client requested disconnect from node 2147483646
2025-06-12T08:33:37.767+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T08:35:07.331+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Node -1 disconnected.
2025-06-12T08:36:06.211+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Revoke previously assigned partitions order-placed-0
2025-06-12T08:36:06.214+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions revoked: [order-placed-0]
2025-06-12T08:36:06.215+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Member consumer-notification-service-1-b1c2be3e-5611-4351-b15f-f1adf8e7dffd sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-06-12T08:36:06.216+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T08:36:06.216+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T08:36:06.216+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-06-12T08:36:06.228+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T08:36:06.228+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T08:36:06.329+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics scheduler closed
2025-06-12T08:36:06.330+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T08:36:06.330+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-12T08:36:06.330+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics reporters closed
2025-06-12T08:36:06.333+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] App info kafka.consumer for consumer-notification-service-1 unregistered
2025-06-12T08:36:06.343+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: Consumer stopped
2025-06-12T08:36:14.578+05:00 INFO  [main] Starting NotificationServiceApplication using Java 21.0.7 with PID 53776 (/Users/doniyor/Documents/Java/programmingtechie/springboot-microservices/notification-service/target/classes started by doniyor in /Users/doniyor/Documents/Java/programmingtechie/springboot-microservices)
2025-06-12T08:36:14.580+05:00 INFO  [main] No active profile set, falling back to 1 default profile: "default"
2025-06-12T08:36:15.676+05:00 INFO  [main] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2025-06-12T08:36:15.700+05:00 INFO  [main] initializing Kafka metrics collector
2025-06-12T08:36:15.718+05:00 INFO  [main] KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://127.0.0.1:8085]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-06-12T08:36:15.765+05:00 INFO  [main] These configurations '[schema.registry.url, specific.avro.reader]' were supplied but are not used yet.
2025-06-12T08:36:15.766+05:00 INFO  [main] Kafka version: 3.8.1
2025-06-12T08:36:15.766+05:00 INFO  [main] Kafka commitId: 70d6ff42debf7e17
2025-06-12T08:36:15.766+05:00 INFO  [main] Kafka startTimeMs: 1749699375765
2025-06-12T08:36:15.773+05:00 INFO  [main] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Subscribed to topic(s): order-placed
2025-06-12T08:36:15.784+05:00 INFO  [main] Started NotificationServiceApplication in 1.676 seconds (process running for 2.188)
2025-06-12T08:36:15.941+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Cluster ID: rn1sZhdCQ0CZ-49QHq7cHw
2025-06-12T08:36:15.941+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T08:36:15.946+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T08:36:15.961+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-1-f093cdf1-b5d4-421f-a23f-644464a725d3
2025-06-12T08:36:15.962+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T08:36:19.003+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully joined group with generation Generation{generationId=73, memberId='consumer-notification-service-1-f093cdf1-b5d4-421f-a23f-644464a725d3', protocol='range'}
2025-06-12T08:36:19.009+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Finished assignment for group at generation 73: {consumer-notification-service-1-f093cdf1-b5d4-421f-a23f-644464a725d3=Assignment(partitions=[order-placed-0])}
2025-06-12T08:36:19.019+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully synced group in generation Generation{generationId=73, memberId='consumer-notification-service-1-f093cdf1-b5d4-421f-a23f-644464a725d3', protocol='range'}
2025-06-12T08:36:19.019+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order-placed-0])
2025-06-12T08:36:19.021+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Adding newly assigned partitions: order-placed-0
2025-06-12T08:36:19.028+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Setting offset for partition order-placed-0 to the committed offset FetchPosition{offset=35, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-06-12T08:36:19.029+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions assigned: [order-placed-0]
2025-06-12T08:45:15.971+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Node -1 disconnected.
2025-06-12T08:50:06.103+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Revoke previously assigned partitions order-placed-0
2025-06-12T08:50:06.107+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions revoked: [order-placed-0]
2025-06-12T08:50:06.108+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Member consumer-notification-service-1-f093cdf1-b5d4-421f-a23f-644464a725d3 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-06-12T08:50:06.109+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T08:50:06.109+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T08:50:06.109+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-06-12T08:50:06.122+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T08:50:06.124+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T08:50:06.349+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics scheduler closed
2025-06-12T08:50:06.350+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T08:50:06.350+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-12T08:50:06.350+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics reporters closed
2025-06-12T08:50:06.355+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] App info kafka.consumer for consumer-notification-service-1 unregistered
2025-06-12T08:50:06.364+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: Consumer stopped
2025-06-12T08:50:10.720+05:00 INFO  [main] Starting NotificationServiceApplication using Java 21.0.7 with PID 54635 (/Users/doniyor/Documents/Java/programmingtechie/springboot-microservices/notification-service/target/classes started by doniyor in /Users/doniyor/Documents/Java/programmingtechie/springboot-microservices)
2025-06-12T08:50:10.723+05:00 INFO  [main] No active profile set, falling back to 1 default profile: "default"
2025-06-12T08:50:12.221+05:00 INFO  [main] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2025-06-12T08:50:12.248+05:00 INFO  [main] initializing Kafka metrics collector
2025-06-12T08:50:12.268+05:00 INFO  [main] KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://127.0.0.1:8085]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-06-12T08:50:12.317+05:00 INFO  [main] These configurations '[schema.registry.url, specific.avro.reader]' were supplied but are not used yet.
2025-06-12T08:50:12.318+05:00 INFO  [main] Kafka version: 3.8.1
2025-06-12T08:50:12.318+05:00 INFO  [main] Kafka commitId: 70d6ff42debf7e17
2025-06-12T08:50:12.318+05:00 INFO  [main] Kafka startTimeMs: 1749700212318
2025-06-12T08:50:12.326+05:00 INFO  [main] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Subscribed to topic(s): order-placed
2025-06-12T08:50:12.338+05:00 INFO  [main] Started NotificationServiceApplication in 2.016 seconds (process running for 2.423)
2025-06-12T08:50:12.485+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Cluster ID: rn1sZhdCQ0CZ-49QHq7cHw
2025-06-12T08:50:12.486+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T08:50:12.487+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T08:50:12.502+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-1-d1b9615e-af5c-4482-9bbb-abb847afc2fa
2025-06-12T08:50:12.502+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T08:50:15.512+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully joined group with generation Generation{generationId=75, memberId='consumer-notification-service-1-d1b9615e-af5c-4482-9bbb-abb847afc2fa', protocol='range'}
2025-06-12T08:50:15.514+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Finished assignment for group at generation 75: {consumer-notification-service-1-d1b9615e-af5c-4482-9bbb-abb847afc2fa=Assignment(partitions=[order-placed-0])}
2025-06-12T08:50:15.522+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully synced group in generation Generation{generationId=75, memberId='consumer-notification-service-1-d1b9615e-af5c-4482-9bbb-abb847afc2fa', protocol='range'}
2025-06-12T08:50:15.522+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order-placed-0])
2025-06-12T08:50:15.523+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Adding newly assigned partitions: order-placed-0
2025-06-12T08:50:15.531+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Setting offset for partition order-placed-0 to the committed offset FetchPosition{offset=35, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-06-12T08:50:15.532+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions assigned: [order-placed-0]
2025-06-12T08:59:12.523+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Node -1 disconnected.
2025-06-12T09:09:12.541+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Node -1 disconnected.
2025-06-12T10:31:04.086+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Revoke previously assigned partitions order-placed-0
2025-06-12T10:31:04.110+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions revoked: [order-placed-0]
2025-06-12T10:31:04.113+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Member consumer-notification-service-1-d1b9615e-af5c-4482-9bbb-abb847afc2fa sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-06-12T10:31:04.117+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T10:31:04.117+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T10:31:04.120+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-06-12T10:31:04.143+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T10:31:04.143+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T10:31:04.493+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics scheduler closed
2025-06-12T10:31:04.493+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T10:31:04.494+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-12T10:31:04.494+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics reporters closed
2025-06-12T10:31:04.500+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] App info kafka.consumer for consumer-notification-service-1 unregistered
2025-06-12T10:31:04.511+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: Consumer stopped
2025-06-12T10:31:09.227+05:00 INFO  [main] Starting NotificationServiceApplication using Java 21.0.7 with PID 60097 (/Users/doniyor/Documents/Java/programmingtechie/springboot-microservices/notification-service/target/classes started by doniyor in /Users/doniyor/Documents/Java/programmingtechie/springboot-microservices)
2025-06-12T10:31:09.233+05:00 INFO  [main] No active profile set, falling back to 1 default profile: "default"
2025-06-12T10:31:10.757+05:00 INFO  [main] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2025-06-12T10:31:10.786+05:00 INFO  [main] initializing Kafka metrics collector
2025-06-12T10:31:10.806+05:00 INFO  [main] KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://127.0.0.1:8085]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-06-12T10:31:10.908+05:00 INFO  [main] These configurations '[schema.registry.url, specific.avro.reader]' were supplied but are not used yet.
2025-06-12T10:31:10.912+05:00 INFO  [main] Kafka version: 3.8.1
2025-06-12T10:31:10.913+05:00 INFO  [main] Kafka commitId: 70d6ff42debf7e17
2025-06-12T10:31:10.913+05:00 INFO  [main] Kafka startTimeMs: 1749706270909
2025-06-12T10:31:10.929+05:00 INFO  [main] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Subscribed to topic(s): order-placed
2025-06-12T10:31:10.945+05:00 INFO  [main] Started NotificationServiceApplication in 2.252 seconds (process running for 2.699)
2025-06-12T10:31:11.265+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Cluster ID: rn1sZhdCQ0CZ-49QHq7cHw
2025-06-12T10:31:11.266+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T10:31:11.269+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T10:31:11.287+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-1-b6be8b9d-2f6f-4a73-8efc-c28a976210e9
2025-06-12T10:31:11.287+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T10:31:14.319+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully joined group with generation Generation{generationId=77, memberId='consumer-notification-service-1-b6be8b9d-2f6f-4a73-8efc-c28a976210e9', protocol='range'}
2025-06-12T10:31:14.342+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Finished assignment for group at generation 77: {consumer-notification-service-1-b6be8b9d-2f6f-4a73-8efc-c28a976210e9=Assignment(partitions=[order-placed-0])}
2025-06-12T10:31:14.372+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully synced group in generation Generation{generationId=77, memberId='consumer-notification-service-1-b6be8b9d-2f6f-4a73-8efc-c28a976210e9', protocol='range'}
2025-06-12T10:31:14.372+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order-placed-0])
2025-06-12T10:31:14.373+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Adding newly assigned partitions: order-placed-0
2025-06-12T10:31:14.384+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Setting offset for partition order-placed-0 to the committed offset FetchPosition{offset=35, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-06-12T10:31:14.385+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions assigned: [order-placed-0]
2025-06-12T10:40:11.429+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Node -1 disconnected.
2025-06-12T10:50:11.290+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Node -1 disconnected.
2025-06-12T11:54:16.171+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Revoke previously assigned partitions order-placed-0
2025-06-12T11:54:16.185+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions revoked: [order-placed-0]
2025-06-12T11:54:16.186+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Member consumer-notification-service-1-b6be8b9d-2f6f-4a73-8efc-c28a976210e9 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-06-12T11:54:16.192+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T11:54:16.193+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T11:54:16.193+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-06-12T11:54:16.199+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T11:54:16.200+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T15:12:15.324+05:00 INFO  [main] Starting NotificationServiceApplication using Java 21.0.7 with PID 68039 (/Users/doniyor/Documents/Java/programmingtechie/springboot-microservices/notification-service/target/classes started by doniyor in /Users/doniyor/Documents/Java/programmingtechie/springboot-microservices)
2025-06-12T15:12:15.326+05:00 INFO  [main] No active profile set, falling back to 1 default profile: "default"
2025-06-12T15:12:16.385+05:00 INFO  [main] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2025-06-12T15:12:16.408+05:00 INFO  [main] initializing Kafka metrics collector
2025-06-12T15:12:16.425+05:00 INFO  [main] KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://127.0.0.1:8085]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-06-12T15:12:16.473+05:00 INFO  [main] These configurations '[schema.registry.url, specific.avro.reader]' were supplied but are not used yet.
2025-06-12T15:12:16.474+05:00 INFO  [main] Kafka version: 3.8.1
2025-06-12T15:12:16.474+05:00 INFO  [main] Kafka commitId: 70d6ff42debf7e17
2025-06-12T15:12:16.474+05:00 INFO  [main] Kafka startTimeMs: 1749723136474
2025-06-12T15:12:16.484+05:00 INFO  [main] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Subscribed to topic(s): order-placed
2025-06-12T15:12:16.496+05:00 INFO  [main] Started NotificationServiceApplication in 1.583 seconds (process running for 2.06)
2025-06-12T15:12:34.019+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Cluster ID: rn1sZhdCQ0CZ-49QHq7cHw
2025-06-12T15:12:34.022+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T15:12:34.026+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T15:12:34.305+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-1-a79f2723-00dc-4af3-b0d6-a80ee74719b5
2025-06-12T15:12:34.305+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T15:12:37.346+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully joined group with generation Generation{generationId=79, memberId='consumer-notification-service-1-a79f2723-00dc-4af3-b0d6-a80ee74719b5', protocol='range'}
2025-06-12T15:12:37.360+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Finished assignment for group at generation 79: {consumer-notification-service-1-a79f2723-00dc-4af3-b0d6-a80ee74719b5=Assignment(partitions=[order-placed-0])}
2025-06-12T15:12:37.392+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully synced group in generation Generation{generationId=79, memberId='consumer-notification-service-1-a79f2723-00dc-4af3-b0d6-a80ee74719b5', protocol='range'}
2025-06-12T15:12:37.393+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order-placed-0])
2025-06-12T15:12:37.396+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Adding newly assigned partitions: order-placed-0
2025-06-12T15:12:37.432+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Setting offset for partition order-placed-0 to the committed offset FetchPosition{offset=35, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-06-12T15:12:37.433+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions assigned: [order-placed-0]
2025-06-12T15:20:56.242+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Revoke previously assigned partitions order-placed-0
2025-06-12T15:20:56.288+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions revoked: [order-placed-0]
2025-06-12T15:20:56.289+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Member consumer-notification-service-1-a79f2723-00dc-4af3-b0d6-a80ee74719b5 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-06-12T15:20:56.299+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T15:20:56.301+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T15:20:56.303+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-06-12T15:20:56.339+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T15:20:56.339+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T15:20:56.448+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics scheduler closed
2025-06-12T15:20:56.449+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T15:20:56.449+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-12T15:20:56.450+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics reporters closed
2025-06-12T15:20:56.469+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] App info kafka.consumer for consumer-notification-service-1 unregistered
2025-06-12T15:20:56.482+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: Consumer stopped
2025-06-12T15:21:00.871+05:00 INFO  [main] Starting NotificationServiceApplication using Java 21.0.7 with PID 68514 (/Users/doniyor/Documents/Java/programmingtechie/springboot-microservices/notification-service/target/classes started by doniyor in /Users/doniyor/Documents/Java/programmingtechie/springboot-microservices)
2025-06-12T15:21:00.873+05:00 INFO  [main] No active profile set, falling back to 1 default profile: "default"
2025-06-12T15:21:02.735+05:00 INFO  [main] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2025-06-12T15:21:02.768+05:00 INFO  [main] initializing Kafka metrics collector
2025-06-12T15:21:02.787+05:00 INFO  [main] KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://127.0.0.1:8085]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-06-12T15:21:02.835+05:00 INFO  [main] These configurations '[schema.registry.url, specific.avro.reader]' were supplied but are not used yet.
2025-06-12T15:21:02.837+05:00 INFO  [main] Kafka version: 3.8.1
2025-06-12T15:21:02.837+05:00 INFO  [main] Kafka commitId: 70d6ff42debf7e17
2025-06-12T15:21:02.837+05:00 INFO  [main] Kafka startTimeMs: 1749723662836
2025-06-12T15:21:02.851+05:00 INFO  [main] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Subscribed to topic(s): order-placed
2025-06-12T15:21:02.875+05:00 INFO  [main] Started NotificationServiceApplication in 2.353 seconds (process running for 2.825)
2025-06-12T15:21:03.060+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Cluster ID: rn1sZhdCQ0CZ-49QHq7cHw
2025-06-12T15:21:03.060+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T15:21:03.062+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T15:21:03.081+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-1-2a2bb453-1f7c-4068-aa42-1bd62b348b75
2025-06-12T15:21:03.081+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T15:21:06.101+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully joined group with generation Generation{generationId=81, memberId='consumer-notification-service-1-2a2bb453-1f7c-4068-aa42-1bd62b348b75', protocol='range'}
2025-06-12T15:21:06.107+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Finished assignment for group at generation 81: {consumer-notification-service-1-2a2bb453-1f7c-4068-aa42-1bd62b348b75=Assignment(partitions=[order-placed-0])}
2025-06-12T15:21:06.126+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully synced group in generation Generation{generationId=81, memberId='consumer-notification-service-1-2a2bb453-1f7c-4068-aa42-1bd62b348b75', protocol='range'}
2025-06-12T15:21:06.127+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order-placed-0])
2025-06-12T15:21:06.131+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Adding newly assigned partitions: order-placed-0
2025-06-12T15:21:06.143+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Setting offset for partition order-placed-0 to the committed offset FetchPosition{offset=35, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-06-12T15:21:06.146+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions assigned: [order-placed-0]
2025-06-12T15:30:03.122+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Node -1 disconnected.
2025-06-12T15:40:03.193+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Node -1 disconnected.
2025-06-12T15:52:47.273+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Revoke previously assigned partitions order-placed-0
2025-06-12T15:52:47.281+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions revoked: [order-placed-0]
2025-06-12T15:52:47.283+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Member consumer-notification-service-1-2a2bb453-1f7c-4068-aa42-1bd62b348b75 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-06-12T15:52:47.284+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T15:52:47.285+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T15:52:47.285+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-06-12T15:52:47.294+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T15:52:47.294+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T15:52:47.317+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics scheduler closed
2025-06-12T15:52:47.317+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T15:52:47.317+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-12T15:52:47.318+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics reporters closed
2025-06-12T15:52:47.335+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] App info kafka.consumer for consumer-notification-service-1 unregistered
2025-06-12T15:52:47.354+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: Consumer stopped
2025-06-12T15:52:52.537+05:00 INFO  [main] Starting NotificationServiceApplication using Java 21.0.7 with PID 70440 (/Users/doniyor/Documents/Java/programmingtechie/springboot-microservices/notification-service/target/classes started by doniyor in /Users/doniyor/Documents/Java/programmingtechie/springboot-microservices)
2025-06-12T15:52:52.542+05:00 INFO  [main] No active profile set, falling back to 1 default profile: "default"
2025-06-12T15:52:55.186+05:00 INFO  [main] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2025-06-12T15:52:55.260+05:00 INFO  [main] initializing Kafka metrics collector
2025-06-12T15:52:55.308+05:00 INFO  [main] KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://127.0.0.1:8085]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-06-12T15:52:55.392+05:00 INFO  [main] These configurations '[schema.registry.url, specific.avro.reader]' were supplied but are not used yet.
2025-06-12T15:52:55.394+05:00 INFO  [main] Kafka version: 3.8.1
2025-06-12T15:52:55.394+05:00 INFO  [main] Kafka commitId: 70d6ff42debf7e17
2025-06-12T15:52:55.394+05:00 INFO  [main] Kafka startTimeMs: 1749725575393
2025-06-12T15:52:55.406+05:00 INFO  [main] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Subscribed to topic(s): order-placed
2025-06-12T15:52:55.430+05:00 INFO  [main] Started NotificationServiceApplication in 3.807 seconds (process running for 4.413)
2025-06-12T15:52:56.015+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Cluster ID: rn1sZhdCQ0CZ-49QHq7cHw
2025-06-12T15:52:56.015+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T15:52:56.018+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T15:52:56.062+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-1-eecd09df-8306-4f62-878f-6fbd022d3216
2025-06-12T15:52:56.062+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T15:52:59.071+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully joined group with generation Generation{generationId=83, memberId='consumer-notification-service-1-eecd09df-8306-4f62-878f-6fbd022d3216', protocol='range'}
2025-06-12T15:52:59.077+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Finished assignment for group at generation 83: {consumer-notification-service-1-eecd09df-8306-4f62-878f-6fbd022d3216=Assignment(partitions=[order-placed-0])}
2025-06-12T15:52:59.101+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully synced group in generation Generation{generationId=83, memberId='consumer-notification-service-1-eecd09df-8306-4f62-878f-6fbd022d3216', protocol='range'}
2025-06-12T15:52:59.107+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order-placed-0])
2025-06-12T15:52:59.109+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Adding newly assigned partitions: order-placed-0
2025-06-12T15:52:59.130+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Setting offset for partition order-placed-0 to the committed offset FetchPosition{offset=35, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-06-12T15:52:59.131+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions assigned: [order-placed-0]
2025-06-12T16:01:56.047+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Node -1 disconnected.
2025-06-12T16:21:45.094+05:00 INFO  [kafka-coordinator-heartbeat-thread | notification-service] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-06-12T16:21:45.634+05:00 INFO  [kafka-coordinator-heartbeat-thread | notification-service] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T16:21:45.732+05:00 INFO  [kafka-coordinator-heartbeat-thread | notification-service] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Client requested disconnect from node 2147483646
2025-06-12T16:21:46.338+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T16:23:07.393+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Node -1 disconnected.
2025-06-12T16:59:06.511+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Revoke previously assigned partitions order-placed-0
2025-06-12T16:59:06.517+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions revoked: [order-placed-0]
2025-06-12T16:59:06.518+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Member consumer-notification-service-1-eecd09df-8306-4f62-878f-6fbd022d3216 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-06-12T16:59:06.520+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T16:59:06.520+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T16:59:06.520+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-06-12T16:59:06.527+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T16:59:06.528+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T16:59:06.753+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics scheduler closed
2025-06-12T16:59:06.753+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T16:59:06.753+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-12T16:59:06.753+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics reporters closed
2025-06-12T16:59:06.760+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] App info kafka.consumer for consumer-notification-service-1 unregistered
2025-06-12T16:59:06.768+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: Consumer stopped
2025-06-12T18:16:50.844+05:00 INFO  [main] Starting NotificationServiceApplication using Java 21.0.7 with PID 78075 (/Users/doniyor/Documents/Java/programmingtechie/springboot-microservices/notification-service/target/classes started by doniyor in /Users/doniyor/Documents/Java/programmingtechie/springboot-microservices)
2025-06-12T18:16:50.849+05:00 INFO  [main] No active profile set, falling back to 1 default profile: "default"
2025-06-12T18:16:52.516+05:00 INFO  [main] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2025-06-12T18:16:52.545+05:00 INFO  [main] initializing Kafka metrics collector
2025-06-12T18:16:52.565+05:00 INFO  [main] KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://127.0.0.1:8085]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-06-12T18:16:52.620+05:00 INFO  [main] These configurations '[schema.registry.url, specific.avro.reader]' were supplied but are not used yet.
2025-06-12T18:16:52.621+05:00 INFO  [main] Kafka version: 3.8.1
2025-06-12T18:16:52.622+05:00 INFO  [main] Kafka commitId: 70d6ff42debf7e17
2025-06-12T18:16:52.622+05:00 INFO  [main] Kafka startTimeMs: 1749734212621
2025-06-12T18:16:52.629+05:00 INFO  [main] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Subscribed to topic(s): order-placed
2025-06-12T18:16:52.644+05:00 INFO  [main] Started NotificationServiceApplication in 2.135 seconds (process running for 2.469)
2025-06-12T18:16:52.843+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Cluster ID: rn1sZhdCQ0CZ-49QHq7cHw
2025-06-12T18:16:52.845+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T18:16:52.851+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T18:16:52.904+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-1-a0783960-3124-47b5-ab8a-38d955b2c921
2025-06-12T18:16:52.905+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T18:16:55.936+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully joined group with generation Generation{generationId=85, memberId='consumer-notification-service-1-a0783960-3124-47b5-ab8a-38d955b2c921', protocol='range'}
2025-06-12T18:16:55.950+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Finished assignment for group at generation 85: {consumer-notification-service-1-a0783960-3124-47b5-ab8a-38d955b2c921=Assignment(partitions=[order-placed-0])}
2025-06-12T18:16:55.980+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully synced group in generation Generation{generationId=85, memberId='consumer-notification-service-1-a0783960-3124-47b5-ab8a-38d955b2c921', protocol='range'}
2025-06-12T18:16:55.981+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order-placed-0])
2025-06-12T18:16:55.982+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Adding newly assigned partitions: order-placed-0
2025-06-12T18:16:55.996+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Setting offset for partition order-placed-0 to the committed offset FetchPosition{offset=35, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-06-12T18:16:56.000+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions assigned: [order-placed-0]
2025-06-12T18:25:53.203+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Node -1 disconnected.
2025-06-12T18:35:53.074+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Node -1 disconnected.
2025-06-12T18:49:11.949+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Revoke previously assigned partitions order-placed-0
2025-06-12T18:49:11.956+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions revoked: [order-placed-0]
2025-06-12T18:49:11.957+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Member consumer-notification-service-1-a0783960-3124-47b5-ab8a-38d955b2c921 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-06-12T18:49:11.957+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T18:49:11.958+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T18:49:11.958+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-06-12T18:49:11.973+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T18:49:11.973+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T18:49:12.296+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics scheduler closed
2025-06-12T18:49:12.296+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T18:49:12.299+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-12T18:49:12.299+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics reporters closed
2025-06-12T18:49:12.321+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] App info kafka.consumer for consumer-notification-service-1 unregistered
2025-06-12T18:49:12.350+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: Consumer stopped
2025-06-12T18:49:16.022+05:00 INFO  [main] Starting NotificationServiceApplication using Java 21.0.7 with PID 79688 (/Users/doniyor/Documents/Java/programmingtechie/springboot-microservices/notification-service/target/classes started by doniyor in /Users/doniyor/Documents/Java/programmingtechie/springboot-microservices)
2025-06-12T18:49:16.027+05:00 INFO  [main] No active profile set, falling back to 1 default profile: "default"
2025-06-12T18:49:17.762+05:00 INFO  [main] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2025-06-12T18:49:17.796+05:00 INFO  [main] initializing Kafka metrics collector
2025-06-12T18:49:17.823+05:00 INFO  [main] KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://127.0.0.1:8085]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-06-12T18:49:17.891+05:00 INFO  [main] These configurations '[schema.registry.url, specific.avro.reader]' were supplied but are not used yet.
2025-06-12T18:49:17.892+05:00 INFO  [main] Kafka version: 3.8.1
2025-06-12T18:49:17.892+05:00 INFO  [main] Kafka commitId: 70d6ff42debf7e17
2025-06-12T18:49:17.892+05:00 INFO  [main] Kafka startTimeMs: 1749736157891
2025-06-12T18:49:17.903+05:00 INFO  [main] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Subscribed to topic(s): order-placed
2025-06-12T18:49:17.917+05:00 INFO  [main] Started NotificationServiceApplication in 2.265 seconds (process running for 2.767)
2025-06-12T18:49:18.139+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Cluster ID: rn1sZhdCQ0CZ-49QHq7cHw
2025-06-12T18:49:18.140+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T18:49:18.150+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T18:49:18.188+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-1-034b567b-45b1-44f6-9e62-72102d4f6d86
2025-06-12T18:49:18.188+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T18:49:21.198+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully joined group with generation Generation{generationId=87, memberId='consumer-notification-service-1-034b567b-45b1-44f6-9e62-72102d4f6d86', protocol='range'}
2025-06-12T18:49:21.205+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Finished assignment for group at generation 87: {consumer-notification-service-1-034b567b-45b1-44f6-9e62-72102d4f6d86=Assignment(partitions=[order-placed-0])}
2025-06-12T18:49:21.220+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully synced group in generation Generation{generationId=87, memberId='consumer-notification-service-1-034b567b-45b1-44f6-9e62-72102d4f6d86', protocol='range'}
2025-06-12T18:49:21.221+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order-placed-0])
2025-06-12T18:49:21.223+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Adding newly assigned partitions: order-placed-0
2025-06-12T18:49:21.235+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Setting offset for partition order-placed-0 to the committed offset FetchPosition{offset=35, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-06-12T18:49:21.236+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions assigned: [order-placed-0]
2025-06-12T18:58:18.220+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Node -1 disconnected.
2025-06-12T19:01:50.211+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Revoke previously assigned partitions order-placed-0
2025-06-12T19:01:50.217+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions revoked: [order-placed-0]
2025-06-12T19:01:50.217+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Member consumer-notification-service-1-034b567b-45b1-44f6-9e62-72102d4f6d86 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-06-12T19:01:50.218+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T19:01:50.218+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T19:01:50.218+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-06-12T19:01:50.223+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T19:01:50.223+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T19:01:50.648+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics scheduler closed
2025-06-12T19:01:50.649+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T19:01:50.649+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-12T19:01:50.649+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics reporters closed
2025-06-12T19:01:50.664+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] App info kafka.consumer for consumer-notification-service-1 unregistered
2025-06-12T19:01:50.676+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: Consumer stopped
2025-06-12T19:10:32.479+05:00 INFO  [main] Starting NotificationServiceApplication using Java 21.0.7 with PID 81347 (/Users/doniyor/Documents/Java/programmingtechie/springboot-microservices/notification-service/target/classes started by doniyor in /Users/doniyor/Documents/Java/programmingtechie/springboot-microservices)
2025-06-12T19:10:32.483+05:00 INFO  [main] No active profile set, falling back to 1 default profile: "default"
2025-06-12T19:10:34.437+05:00 INFO  [main] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2025-06-12T19:10:34.494+05:00 INFO  [main] initializing Kafka metrics collector
2025-06-12T19:10:34.551+05:00 INFO  [main] KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://127.0.0.1:8085]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-06-12T19:10:34.616+05:00 INFO  [main] These configurations '[schema.registry.url, specific.avro.reader]' were supplied but are not used yet.
2025-06-12T19:10:34.619+05:00 INFO  [main] Kafka version: 3.8.1
2025-06-12T19:10:34.620+05:00 INFO  [main] Kafka commitId: 70d6ff42debf7e17
2025-06-12T19:10:34.620+05:00 INFO  [main] Kafka startTimeMs: 1749737434618
2025-06-12T19:10:34.630+05:00 INFO  [main] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Subscribed to topic(s): order-placed
2025-06-12T19:10:34.647+05:00 INFO  [main] Started NotificationServiceApplication in 2.996 seconds (process running for 3.454)
2025-06-12T19:10:35.140+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Cluster ID: rn1sZhdCQ0CZ-49QHq7cHw
2025-06-12T19:10:35.141+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T19:10:35.147+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T19:10:35.174+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-1-ff23e942-fe52-4b2f-91be-c8b83f627065
2025-06-12T19:10:35.175+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T19:10:38.187+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully joined group with generation Generation{generationId=89, memberId='consumer-notification-service-1-ff23e942-fe52-4b2f-91be-c8b83f627065', protocol='range'}
2025-06-12T19:10:38.197+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Finished assignment for group at generation 89: {consumer-notification-service-1-ff23e942-fe52-4b2f-91be-c8b83f627065=Assignment(partitions=[order-placed-0])}
2025-06-12T19:10:38.212+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully synced group in generation Generation{generationId=89, memberId='consumer-notification-service-1-ff23e942-fe52-4b2f-91be-c8b83f627065', protocol='range'}
2025-06-12T19:10:38.213+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order-placed-0])
2025-06-12T19:10:38.214+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Adding newly assigned partitions: order-placed-0
2025-06-12T19:10:38.221+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Setting offset for partition order-placed-0 to the committed offset FetchPosition{offset=35, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-06-12T19:10:38.222+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions assigned: [order-placed-0]
2025-06-12T19:18:07.920+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Revoke previously assigned partitions order-placed-0
2025-06-12T19:18:07.922+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions revoked: [order-placed-0]
2025-06-12T19:18:07.923+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Member consumer-notification-service-1-ff23e942-fe52-4b2f-91be-c8b83f627065 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-06-12T19:18:07.925+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T19:18:07.929+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T19:18:07.931+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-06-12T19:18:07.982+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T19:18:07.983+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T19:18:08.085+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics scheduler closed
2025-06-12T19:18:08.086+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T19:18:08.086+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-12T19:18:08.086+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics reporters closed
2025-06-12T19:18:08.090+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] App info kafka.consumer for consumer-notification-service-1 unregistered
2025-06-12T19:18:08.098+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: Consumer stopped
2025-06-12T19:18:16.978+05:00 INFO  [main] Starting NotificationServiceApplication using Java 21.0.7 with PID 81984 (/Users/doniyor/Documents/Java/programmingtechie/springboot-microservices/notification-service/target/classes started by doniyor in /Users/doniyor/Documents/Java/programmingtechie/springboot-microservices)
2025-06-12T19:18:16.980+05:00 INFO  [main] No active profile set, falling back to 1 default profile: "default"
2025-06-12T19:18:18.274+05:00 INFO  [main] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2025-06-12T19:18:18.336+05:00 INFO  [main] initializing Kafka metrics collector
2025-06-12T19:18:18.358+05:00 INFO  [main] KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://127.0.0.1:8085]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-06-12T19:18:18.406+05:00 INFO  [main] These configurations '[schema.registry.url, specific.avro.reader]' were supplied but are not used yet.
2025-06-12T19:18:18.408+05:00 INFO  [main] Kafka version: 3.8.1
2025-06-12T19:18:18.408+05:00 INFO  [main] Kafka commitId: 70d6ff42debf7e17
2025-06-12T19:18:18.409+05:00 INFO  [main] Kafka startTimeMs: 1749737898407
2025-06-12T19:18:18.416+05:00 INFO  [main] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Subscribed to topic(s): order-placed
2025-06-12T19:18:18.435+05:00 INFO  [main] Started NotificationServiceApplication in 1.946 seconds (process running for 2.392)
2025-06-12T19:18:18.613+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Cluster ID: rn1sZhdCQ0CZ-49QHq7cHw
2025-06-12T19:18:18.614+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T19:18:18.615+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T19:18:18.639+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-1-1a4dc9f9-ecc8-412c-9fe3-5447a9eec7f9
2025-06-12T19:18:18.642+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T19:18:21.657+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully joined group with generation Generation{generationId=91, memberId='consumer-notification-service-1-1a4dc9f9-ecc8-412c-9fe3-5447a9eec7f9', protocol='range'}
2025-06-12T19:18:21.661+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Finished assignment for group at generation 91: {consumer-notification-service-1-1a4dc9f9-ecc8-412c-9fe3-5447a9eec7f9=Assignment(partitions=[order-placed-0])}
2025-06-12T19:18:21.678+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully synced group in generation Generation{generationId=91, memberId='consumer-notification-service-1-1a4dc9f9-ecc8-412c-9fe3-5447a9eec7f9', protocol='range'}
2025-06-12T19:18:21.678+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order-placed-0])
2025-06-12T19:18:21.680+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Adding newly assigned partitions: order-placed-0
2025-06-12T19:18:21.688+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Setting offset for partition order-placed-0 to the committed offset FetchPosition{offset=35, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-06-12T19:18:21.689+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions assigned: [order-placed-0]
2025-06-12T19:18:34.116+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = notification-service-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-06-12T19:18:34.153+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Kafka version: 3.8.1
2025-06-12T19:18:34.153+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Kafka commitId: 70d6ff42debf7e17
2025-06-12T19:18:34.153+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Kafka startTimeMs: 1749737914153
2025-06-12T19:18:34.193+05:00 INFO  [kafka-admin-client-thread | notification-service-admin-0] App info kafka.admin.client for notification-service-admin-0 unregistered
2025-06-12T19:18:34.200+05:00 INFO  [kafka-admin-client-thread | notification-service-admin-0] Metrics scheduler closed
2025-06-12T19:18:34.200+05:00 INFO  [kafka-admin-client-thread | notification-service-admin-0] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T19:18:34.200+05:00 INFO  [kafka-admin-client-thread | notification-service-admin-0] Metrics reporters closed
2025-06-12T19:18:34.236+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "0246c677-0b74-4667-bb33-53d0d800fda3", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:18:34.291+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 35 for partition order-placed-0
2025-06-12T19:18:34.291+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:18:34.622+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "0246c677-0b74-4667-bb33-53d0d800fda3", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:18:34.636+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 35 for partition order-placed-0
2025-06-12T19:18:34.636+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:18:35.130+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "0246c677-0b74-4667-bb33-53d0d800fda3", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:18:35.143+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 35 for partition order-placed-0
2025-06-12T19:18:35.144+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:18:35.638+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "0246c677-0b74-4667-bb33-53d0d800fda3", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:18:35.651+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 35 for partition order-placed-0
2025-06-12T19:18:35.651+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:18:36.145+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "0246c677-0b74-4667-bb33-53d0d800fda3", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:18:36.157+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 35 for partition order-placed-0
2025-06-12T19:18:36.157+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:18:36.657+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "0246c677-0b74-4667-bb33-53d0d800fda3", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:18:36.671+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 35 for partition order-placed-0
2025-06-12T19:18:36.672+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:18:37.164+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "0246c677-0b74-4667-bb33-53d0d800fda3", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:18:37.177+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 35 for partition order-placed-0
2025-06-12T19:18:37.177+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:18:37.674+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "0246c677-0b74-4667-bb33-53d0d800fda3", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:18:37.686+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 35 for partition order-placed-0
2025-06-12T19:18:37.686+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:18:38.182+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "0246c677-0b74-4667-bb33-53d0d800fda3", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:18:38.196+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 35 for partition order-placed-0
2025-06-12T19:18:38.196+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:18:38.696+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "0246c677-0b74-4667-bb33-53d0d800fda3", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:18:38.699+05:00 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for order-placed-0@35
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.techie.microservices.notification.service.NotificationService.listen(com.techie.microservices.order.event.OrderPlacedEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2983)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2890)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2767)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2605)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2494)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2145)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1521)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1459)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1328)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:489)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2876)
Caused by: java.lang.NullPointerException: Cannot invoke "java.lang.CharSequence.toString()" because the return value of "com.techie.microservices.order.event.OrderPlacedEvent.getFirstName()" is null
	at com.techie.microservices.notification.service.NotificationService.listen(NotificationService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:71)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2876)
	... 10 common frames omitted
2025-06-12T19:19:52.385+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Revoke previously assigned partitions order-placed-0
2025-06-12T19:19:52.387+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions revoked: [order-placed-0]
2025-06-12T19:19:52.388+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Member consumer-notification-service-1-1a4dc9f9-ecc8-412c-9fe3-5447a9eec7f9 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-06-12T19:19:52.388+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T19:19:52.389+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T19:19:52.389+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-06-12T19:19:52.391+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T19:19:52.391+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T19:19:52.514+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics scheduler closed
2025-06-12T19:19:52.515+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T19:19:52.515+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-12T19:19:52.515+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics reporters closed
2025-06-12T19:19:52.517+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] App info kafka.consumer for consumer-notification-service-1 unregistered
2025-06-12T19:19:52.526+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: Consumer stopped
2025-06-12T19:19:54.899+05:00 INFO  [main] Starting NotificationServiceApplication using Java 21.0.7 with PID 82075 (/Users/doniyor/Documents/Java/programmingtechie/springboot-microservices/notification-service/target/classes started by doniyor in /Users/doniyor/Documents/Java/programmingtechie/springboot-microservices)
2025-06-12T19:19:54.901+05:00 INFO  [main] No active profile set, falling back to 1 default profile: "default"
2025-06-12T19:19:55.949+05:00 INFO  [main] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2025-06-12T19:19:55.972+05:00 INFO  [main] initializing Kafka metrics collector
2025-06-12T19:19:55.987+05:00 INFO  [main] KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://127.0.0.1:8085]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-06-12T19:19:56.025+05:00 INFO  [main] These configurations '[schema.registry.url, specific.avro.reader]' were supplied but are not used yet.
2025-06-12T19:19:56.026+05:00 INFO  [main] Kafka version: 3.8.1
2025-06-12T19:19:56.027+05:00 INFO  [main] Kafka commitId: 70d6ff42debf7e17
2025-06-12T19:19:56.027+05:00 INFO  [main] Kafka startTimeMs: 1749737996026
2025-06-12T19:19:56.033+05:00 INFO  [main] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Subscribed to topic(s): order-placed
2025-06-12T19:19:56.043+05:00 INFO  [main] Started NotificationServiceApplication in 1.467 seconds (process running for 1.77)
2025-06-12T19:19:56.176+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Cluster ID: rn1sZhdCQ0CZ-49QHq7cHw
2025-06-12T19:19:56.177+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T19:19:56.178+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T19:19:56.186+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-1-36545395-13c3-406a-9838-8150990fac61
2025-06-12T19:19:56.186+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T19:19:59.196+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully joined group with generation Generation{generationId=93, memberId='consumer-notification-service-1-36545395-13c3-406a-9838-8150990fac61', protocol='range'}
2025-06-12T19:19:59.201+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Finished assignment for group at generation 93: {consumer-notification-service-1-36545395-13c3-406a-9838-8150990fac61=Assignment(partitions=[order-placed-0])}
2025-06-12T19:19:59.207+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully synced group in generation Generation{generationId=93, memberId='consumer-notification-service-1-36545395-13c3-406a-9838-8150990fac61', protocol='range'}
2025-06-12T19:19:59.207+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order-placed-0])
2025-06-12T19:19:59.208+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Adding newly assigned partitions: order-placed-0
2025-06-12T19:19:59.213+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Setting offset for partition order-placed-0 to the committed offset FetchPosition{offset=36, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-06-12T19:19:59.214+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions assigned: [order-placed-0]
2025-06-12T19:20:09.792+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = notification-service-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-06-12T19:20:09.804+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Kafka version: 3.8.1
2025-06-12T19:20:09.805+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Kafka commitId: 70d6ff42debf7e17
2025-06-12T19:20:09.805+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Kafka startTimeMs: 1749738009804
2025-06-12T19:20:09.824+05:00 INFO  [kafka-admin-client-thread | notification-service-admin-0] App info kafka.admin.client for notification-service-admin-0 unregistered
2025-06-12T19:20:09.826+05:00 INFO  [kafka-admin-client-thread | notification-service-admin-0] Metrics scheduler closed
2025-06-12T19:20:09.826+05:00 INFO  [kafka-admin-client-thread | notification-service-admin-0] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T19:20:09.826+05:00 INFO  [kafka-admin-client-thread | notification-service-admin-0] Metrics reporters closed
2025-06-12T19:20:09.837+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "37758e0b-391d-4711-abce-71f9a4409419", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:20:09.854+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 36 for partition order-placed-0
2025-06-12T19:20:09.854+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:20:10.295+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "37758e0b-391d-4711-abce-71f9a4409419", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:20:10.307+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 36 for partition order-placed-0
2025-06-12T19:20:10.308+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:20:10.808+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "37758e0b-391d-4711-abce-71f9a4409419", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:20:10.822+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 36 for partition order-placed-0
2025-06-12T19:20:10.823+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:20:11.322+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "37758e0b-391d-4711-abce-71f9a4409419", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:20:11.337+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 36 for partition order-placed-0
2025-06-12T19:20:11.337+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:20:11.850+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "37758e0b-391d-4711-abce-71f9a4409419", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:20:11.865+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 36 for partition order-placed-0
2025-06-12T19:20:11.865+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:20:12.360+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "37758e0b-391d-4711-abce-71f9a4409419", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:20:12.374+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 36 for partition order-placed-0
2025-06-12T19:20:12.375+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:20:12.869+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "37758e0b-391d-4711-abce-71f9a4409419", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:20:12.882+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 36 for partition order-placed-0
2025-06-12T19:20:12.883+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:20:13.373+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "37758e0b-391d-4711-abce-71f9a4409419", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:20:13.384+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 36 for partition order-placed-0
2025-06-12T19:20:13.387+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:20:13.878+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "37758e0b-391d-4711-abce-71f9a4409419", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:20:13.892+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 36 for partition order-placed-0
2025-06-12T19:20:13.893+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:20:14.393+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "37758e0b-391d-4711-abce-71f9a4409419", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:20:14.399+05:00 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for order-placed-0@36
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.techie.microservices.notification.service.NotificationService.listen(com.techie.microservices.order.event.OrderPlacedEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2983)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2890)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2767)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2605)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2494)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2145)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1521)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1459)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1328)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:489)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2876)
Caused by: java.lang.NullPointerException: Cannot invoke "java.lang.CharSequence.toString()" because the return value of "com.techie.microservices.order.event.OrderPlacedEvent.getFirstName()" is null
	at com.techie.microservices.notification.service.NotificationService.listen(NotificationService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:71)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2876)
	... 10 common frames omitted
2025-06-12T19:21:15.577+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Revoke previously assigned partitions order-placed-0
2025-06-12T19:21:15.580+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions revoked: [order-placed-0]
2025-06-12T19:21:15.581+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Member consumer-notification-service-1-36545395-13c3-406a-9838-8150990fac61 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-06-12T19:21:15.581+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T19:21:15.582+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T19:21:15.582+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-06-12T19:21:15.588+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T19:21:15.588+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T19:21:15.611+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics scheduler closed
2025-06-12T19:21:15.611+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T19:21:15.611+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-12T19:21:15.611+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics reporters closed
2025-06-12T19:21:15.615+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] App info kafka.consumer for consumer-notification-service-1 unregistered
2025-06-12T19:21:15.636+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: Consumer stopped
2025-06-12T19:21:19.261+05:00 INFO  [main] Starting NotificationServiceApplication using Java 21.0.7 with PID 82168 (/Users/doniyor/Documents/Java/programmingtechie/springboot-microservices/notification-service/target/classes started by doniyor in /Users/doniyor/Documents/Java/programmingtechie/springboot-microservices)
2025-06-12T19:21:19.263+05:00 INFO  [main] No active profile set, falling back to 1 default profile: "default"
2025-06-12T19:21:20.242+05:00 INFO  [main] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2025-06-12T19:21:20.264+05:00 INFO  [main] initializing Kafka metrics collector
2025-06-12T19:21:20.282+05:00 INFO  [main] KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://127.0.0.1:8085]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-06-12T19:21:20.324+05:00 INFO  [main] These configurations '[schema.registry.url, specific.avro.reader]' were supplied but are not used yet.
2025-06-12T19:21:20.325+05:00 INFO  [main] Kafka version: 3.8.1
2025-06-12T19:21:20.325+05:00 INFO  [main] Kafka commitId: 70d6ff42debf7e17
2025-06-12T19:21:20.325+05:00 INFO  [main] Kafka startTimeMs: 1749738080325
2025-06-12T19:21:20.332+05:00 INFO  [main] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Subscribed to topic(s): order-placed
2025-06-12T19:21:20.344+05:00 INFO  [main] Started NotificationServiceApplication in 1.433 seconds (process running for 1.751)
2025-06-12T19:21:20.473+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Cluster ID: rn1sZhdCQ0CZ-49QHq7cHw
2025-06-12T19:21:20.474+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T19:21:20.476+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T19:21:20.485+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-1-e4791650-7a2e-47d7-aa8e-5ce9dc37c255
2025-06-12T19:21:20.486+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T19:21:23.497+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully joined group with generation Generation{generationId=95, memberId='consumer-notification-service-1-e4791650-7a2e-47d7-aa8e-5ce9dc37c255', protocol='range'}
2025-06-12T19:21:23.502+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Finished assignment for group at generation 95: {consumer-notification-service-1-e4791650-7a2e-47d7-aa8e-5ce9dc37c255=Assignment(partitions=[order-placed-0])}
2025-06-12T19:21:23.517+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully synced group in generation Generation{generationId=95, memberId='consumer-notification-service-1-e4791650-7a2e-47d7-aa8e-5ce9dc37c255', protocol='range'}
2025-06-12T19:21:23.518+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order-placed-0])
2025-06-12T19:21:23.523+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Adding newly assigned partitions: order-placed-0
2025-06-12T19:21:23.533+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Setting offset for partition order-placed-0 to the committed offset FetchPosition{offset=37, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-06-12T19:21:23.539+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions assigned: [order-placed-0]
2025-06-12T19:21:32.936+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = notification-service-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-06-12T19:21:32.946+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Kafka version: 3.8.1
2025-06-12T19:21:32.946+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Kafka commitId: 70d6ff42debf7e17
2025-06-12T19:21:32.946+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Kafka startTimeMs: 1749738092946
2025-06-12T19:21:32.952+05:00 INFO  [kafka-admin-client-thread | notification-service-admin-0] App info kafka.admin.client for notification-service-admin-0 unregistered
2025-06-12T19:21:32.954+05:00 INFO  [kafka-admin-client-thread | notification-service-admin-0] Metrics scheduler closed
2025-06-12T19:21:32.955+05:00 INFO  [kafka-admin-client-thread | notification-service-admin-0] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T19:21:32.955+05:00 INFO  [kafka-admin-client-thread | notification-service-admin-0] Metrics reporters closed
2025-06-12T19:21:32.965+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "d619debb-d6a2-4193-b67d-015fd1674720", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:21:32.983+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 37 for partition order-placed-0
2025-06-12T19:21:32.983+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:21:33.441+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "d619debb-d6a2-4193-b67d-015fd1674720", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:21:33.453+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 37 for partition order-placed-0
2025-06-12T19:21:33.453+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:21:33.976+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "d619debb-d6a2-4193-b67d-015fd1674720", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:21:33.990+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 37 for partition order-placed-0
2025-06-12T19:21:33.992+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:21:34.503+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "d619debb-d6a2-4193-b67d-015fd1674720", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:21:34.520+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 37 for partition order-placed-0
2025-06-12T19:21:34.523+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:21:35.008+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "d619debb-d6a2-4193-b67d-015fd1674720", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:21:35.020+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 37 for partition order-placed-0
2025-06-12T19:21:35.020+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:21:35.511+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "d619debb-d6a2-4193-b67d-015fd1674720", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:21:35.525+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 37 for partition order-placed-0
2025-06-12T19:21:35.526+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:21:36.015+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "d619debb-d6a2-4193-b67d-015fd1674720", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:21:36.028+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 37 for partition order-placed-0
2025-06-12T19:21:36.029+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:21:36.535+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "d619debb-d6a2-4193-b67d-015fd1674720", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:21:36.550+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 37 for partition order-placed-0
2025-06-12T19:21:36.550+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:21:37.048+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "d619debb-d6a2-4193-b67d-015fd1674720", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:21:37.061+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Seeking to offset 37 for partition order-placed-0
2025-06-12T19:21:37.061+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Record in retry and not yet recovered
2025-06-12T19:21:37.558+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Got message from order-placed topic {"orderNumber": "d619debb-d6a2-4193-b67d-015fd1674720", "email": "testuser@gmail.com", "firstName": null, "lastName": null}
2025-06-12T19:21:37.567+05:00 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for order-placed-0@37
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.techie.microservices.notification.service.NotificationService.listen(com.techie.microservices.order.event.OrderPlacedEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2983)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2890)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2767)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2605)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2494)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2145)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1521)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1459)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1328)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:489)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2876)
Caused by: java.lang.NullPointerException: Cannot invoke "java.lang.CharSequence.toString()" because the return value of "com.techie.microservices.order.event.OrderPlacedEvent.getFirstName()" is null
	at com.techie.microservices.notification.service.NotificationService.listen(NotificationService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:71)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2876)
	... 10 common frames omitted
2025-06-12T19:22:16.199+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Revoke previously assigned partitions order-placed-0
2025-06-12T19:22:16.201+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions revoked: [order-placed-0]
2025-06-12T19:22:16.201+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Member consumer-notification-service-1-e4791650-7a2e-47d7-aa8e-5ce9dc37c255 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-06-12T19:22:16.202+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T19:22:16.202+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T19:22:16.202+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-06-12T19:22:16.204+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T19:22:16.204+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T19:22:16.510+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics scheduler closed
2025-06-12T19:22:16.510+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T19:22:16.510+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-12T19:22:16.510+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics reporters closed
2025-06-12T19:22:16.518+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] App info kafka.consumer for consumer-notification-service-1 unregistered
2025-06-12T19:22:16.536+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: Consumer stopped
2025-06-12T19:22:19.436+05:00 INFO  [main] Starting NotificationServiceApplication using Java 21.0.7 with PID 82219 (/Users/doniyor/Documents/Java/programmingtechie/springboot-microservices/notification-service/target/classes started by doniyor in /Users/doniyor/Documents/Java/programmingtechie/springboot-microservices)
2025-06-12T19:22:19.439+05:00 INFO  [main] No active profile set, falling back to 1 default profile: "default"
2025-06-12T19:22:20.402+05:00 INFO  [main] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2025-06-12T19:22:20.422+05:00 INFO  [main] initializing Kafka metrics collector
2025-06-12T19:22:20.438+05:00 INFO  [main] KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://127.0.0.1:8085]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-06-12T19:22:20.476+05:00 INFO  [main] These configurations '[schema.registry.url, specific.avro.reader]' were supplied but are not used yet.
2025-06-12T19:22:20.477+05:00 INFO  [main] Kafka version: 3.8.1
2025-06-12T19:22:20.477+05:00 INFO  [main] Kafka commitId: 70d6ff42debf7e17
2025-06-12T19:22:20.477+05:00 INFO  [main] Kafka startTimeMs: 1749738140477
2025-06-12T19:22:20.484+05:00 INFO  [main] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Subscribed to topic(s): order-placed
2025-06-12T19:22:20.495+05:00 INFO  [main] Started NotificationServiceApplication in 1.369 seconds (process running for 1.648)
2025-06-12T19:22:20.617+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Cluster ID: rn1sZhdCQ0CZ-49QHq7cHw
2025-06-12T19:22:20.618+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-06-12T19:22:20.619+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T19:22:20.631+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-1-b5fe7290-1cb2-4b9d-a5c8-9f086d4bcd7e
2025-06-12T19:22:20.632+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] (Re-)joining group
2025-06-12T19:22:23.647+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully joined group with generation Generation{generationId=97, memberId='consumer-notification-service-1-b5fe7290-1cb2-4b9d-a5c8-9f086d4bcd7e', protocol='range'}
2025-06-12T19:22:23.653+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Finished assignment for group at generation 97: {consumer-notification-service-1-b5fe7290-1cb2-4b9d-a5c8-9f086d4bcd7e=Assignment(partitions=[order-placed-0])}
2025-06-12T19:22:23.660+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Successfully synced group in generation Generation{generationId=97, memberId='consumer-notification-service-1-b5fe7290-1cb2-4b9d-a5c8-9f086d4bcd7e', protocol='range'}
2025-06-12T19:22:23.660+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order-placed-0])
2025-06-12T19:22:23.661+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Adding newly assigned partitions: order-placed-0
2025-06-12T19:22:23.667+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Setting offset for partition order-placed-0 to the committed offset FetchPosition{offset=38, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-06-12T19:22:23.668+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions assigned: [order-placed-0]
2025-06-12T19:31:20.670+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Node -1 disconnected.
2025-06-12T19:32:48.589+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Revoke previously assigned partitions order-placed-0
2025-06-12T19:32:48.593+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: partitions revoked: [order-placed-0]
2025-06-12T19:32:48.594+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Member consumer-notification-service-1-b5fe7290-1cb2-4b9d-a5c8-9f086d4bcd7e sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-06-12T19:32:48.595+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T19:32:48.595+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T19:32:48.595+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-06-12T19:32:48.598+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-12T19:32:48.599+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Consumer clientId=consumer-notification-service-1, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-06-12T19:32:48.741+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics scheduler closed
2025-06-12T19:32:48.741+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-12T19:32:48.741+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-12T19:32:48.741+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metrics reporters closed
2025-06-12T19:32:48.745+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] App info kafka.consumer for consumer-notification-service-1 unregistered
2025-06-12T19:32:48.752+05:00 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] notification-service: Consumer stopped
